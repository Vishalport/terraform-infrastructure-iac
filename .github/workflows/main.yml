name: Deploy to EKS

on:
  repository_dispatch:
    types: [deploy_to_eks]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Write SSH private key
      run: |
        echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > private_key.pem
        chmod 600 private_key.pem

    - name: Configure SSH
      run: |
        mkdir -p ~/.ssh
        cp private_key.pem ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.EC2_PUBLIC_ADDRESS }} >> ~/.ssh/known_hosts

    - name: Deploy Based on Image Type
      run: |
        if [ "${{ github.event.client_payload.repo }}" == "nodejs-server" ]; then
          echo "Deploying Node.js server..."
          LATEST_IMAGE=$(ssh -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_PUBLIC_ADDRESS }} "sudo docker images | grep nodeserver | awk '{print \$2}' | sort -r | head -n 1")
          ssh -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_PUBLIC_ADDRESS }} << EOF
            cat <<EOL > kubernetes/deployment-nodejs.yaml
            apiVersion: apps/v1
            kind: Deployment
            metadata:
              name: nodeserver
            spec:
              replicas: 2
              selector:
                matchLabels:
                  app: nodeserver
              template:
                metadata:
                  labels:
                    app: nodeserver
                spec:
                  containers:
                  - name: nodeserver
                    image: devopsport2165/nodeserver:\$LATEST_IMAGE
                    ports:
                    - containerPort: 1950
            EOL
            kubectl apply -f kubernetes/deployment-nodejs.yaml
          EOF
        elif [ "${{ github.event.client_payload.repo }}" == "nextjs-server" ]; then
          echo "Deploying Next.js server..."
          LATEST_IMAGE=$(ssh -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_PUBLIC_ADDRESS }} "sudo docker images | grep nextserver | awk '{print \$2}' | sort -r | head -n 1")
          ssh -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_PUBLIC_ADDRESS }} << EOF
            cat <<EOL > kubernetes/deployment-nextjs.yaml
            apiVersion: apps/v1
            kind: Deployment
            metadata:
              name: nextserver
            spec:
              replicas: 2
              selector:
                matchLabels:
                  app: nextserver
              template:
                metadata:
                  labels:
                    app: nextserver
                spec:
                  containers:
                  - name: nextserver
                    image: devopsport2165/nextserver:\$LATEST_IMAGE
                    ports:
                    - containerPort: 3000
            EOL
            kubectl apply -f kubernetes/deployment-nextjs.yaml
          EOF
        else
          echo "No valid repo specified. Exiting..."
          exit 1
        fi